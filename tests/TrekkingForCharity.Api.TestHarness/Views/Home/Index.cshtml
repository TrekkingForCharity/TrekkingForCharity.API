@using System.Reflection
@using TrekkingForCharity.Api.Client.Executors.Commands
@{
    var types = Assembly.GetAssembly(typeof(CreateTrekCommand)).GetTypes().Where(x => x.Name.EndsWith("Command") && x.Name != "BaseCommand").ToList();
}

<div class="container">
    <div class="columns">
        <div class="column">
            <nav class="panel">
                <p class="panel-heading">
                    Commands
                </p>
                @foreach (var type in types)
                {
                    <a class="panel-block" data-for="command-@type.Name">@type.Name</a>
                }
            </nav>
        </div>
        <div class="column is-three-fifths">
            @foreach (var type in types)
            {
                <form id="@($"command-{type.Name}")" asp-action="ProcessCommand" asp-route-commandName="@type.Name" asp-antiforgery="false" >
                    @foreach (var prop in type.GetProperties())
                    {
                        <div class="field">
                            <label for="@($"{type.Name}.{prop.Name}")">@prop.Name</label>
                            <div class="control">
                                <input class="input" type="text" name="@prop.Name" id="@($"{type.Name}.{prop.Name}")"/>
                            </div>
                        </div>
                    }
                    <button type="submit" class="button">Submit</button>
                </form>
            }
        </div>

    </div>


</div>
<script>

    function toJSONString( form ) {
        var obj = {};
        var elements = form.querySelectorAll( "input, select, textarea" );
        for( var i = 0; i < elements.length; ++i ) {
            var element = elements[i];
            var name = element.name;
            var value = element.value;

            if( name ) {
                obj[ name ] = value;
            }
        }

        return JSON.stringify( obj );
    }

    var forms = document.querySelectorAll('form');
    for (var i = 0; i < forms.length; ++i) {
        forms[i].classList.add('is-hidden');
        forms[i].onsubmit = (event) => {
            event.preventDefault();
            var form = event.currentTarget;
            var formData = toJSONString(form);
            console.log(formData);
            fetch(form.action,
                {
                    method: 'POST',
                    credentials: "same-origin",
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ commandData: formData })

                }).then(response => response.json()).then(j => console.log(j));

        };
    }
    var links = document.querySelectorAll('a[data-for]');
    for (i = 0; i < forms.length; ++i) {
        links[i].onclick = (event) => {
            var forms = document.querySelectorAll('form');
            for (var i = 0; i < forms.length; ++i) {
                forms[i].classList.add('is-hidden');
            }
            var link = event.currentTarget;
            var formToShow = link.dataset['for'];
            var form = document.getElementById(formToShow);
            form.classList.remove('is-hidden');
        };

    }
</script>